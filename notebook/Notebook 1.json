{
	"name": "Notebook 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "mysparkpool1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "137b4649-1068-4d86-873c-6ca359ce9cd5"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/85715743-6996-454c-9b4b-9664cf411041/resourceGroups/siad-demo-rg/providers/Microsoft.Synapse/workspaces/siad-demo-ws2/bigDataPools/mysparkpool1",
				"name": "mysparkpool1",
				"type": "Spark",
				"endpoint": "https://siad-demo-ws2.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mysparkpool1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"dfStoreDemoGraphics = (spark\r\n",
					"                .read\r\n",
					"                .csv(\"/RetailData/StoreDemoGraphics.csv\", header=True, inferSchema='true')\r\n",
					"              )\r\n",
					"\r\n",
					"dfRetailSales = (spark\r\n",
					"                .read\r\n",
					"                .csv(\"/RetailData/RetailSales.csv\", header=True, inferSchema='true')\r\n",
					"              )\r\n",
					"\r\n",
					"dfProduct = (spark\r\n",
					"                .read\r\n",
					"                .csv(\"/RetailData/Products.csv\", header=True, inferSchema='true')\r\n",
					"              )"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"dfStoreDemoGraphics.write\\\r\n",
					"            .format(\"cosmos.oltp\")\\\r\n",
					"            .option(\"spark.synapse.linkedService\", \"RetailSalesDemoDB\")\\\r\n",
					"            .option(\"spark.cosmos.container\", \"StoreDemoGraphics\")\\\r\n",
					"            .mode('append')\\\r\n",
					"            .save()"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"dfRetailSales.write\\\r\n",
					"            .format(\"cosmos.oltp\")\\\r\n",
					"            .option(\"spark.synapse.linkedService\", \"RetailSalesDemoDB\")\\\r\n",
					"            .option(\"spark.cosmos.container\", \"RetailSales\")\\\r\n",
					"            .mode('append')\\\r\n",
					"            .save()"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"dfProduct.write\\\r\n",
					"            .format(\"cosmos.oltp\")\\\r\n",
					"            .option(\"spark.synapse.linkedService\", \"RetailSalesDemoDB\")\\\r\n",
					"            .option(\"spark.cosmos.container\", \"Products\")\\\r\n",
					"            .mode('append')\\\r\n",
					"            .save() "
				],
				"execution_count": 4
			}
		]
	}
}