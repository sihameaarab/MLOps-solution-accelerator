{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "siad-demo-ws2"
		},
		"onprem_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'onprem'",
			"defaultValue": "Integrated Security=True;Data Source=.;Initial Catalog=WideWorldImportersDW"
		},
		"onprem_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'onprem'"
		},
		"onpremise_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'onpremise'",
			"defaultValue": "Integrated Security=True;Data Source=.;Initial Catalog=WideWorldImportersDW"
		},
		"onpremise_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'onpremise'"
		},
		"siad-demo-ws2-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'siad-demo-ws2-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:siad-demo-ws2.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"onprem_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "EUROPE\\sihaarab"
		},
		"onpremise_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "EUROPE\\sihaarab"
		},
		"siad-demo-ws2-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://siaddemows2.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlPoolSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"tableOption": "autoCreate"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "siad-demo-ws2-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WWIDW",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlPoolTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/WWIDW')]",
				"[concat(variables('workspaceId'), '/datasets/SqlPoolTable1')]",
				"[concat(variables('workspaceId'), '/linkedServices/siad-demo-ws2-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": " SELECT\n\tOBJECT_SCHEMA_NAME(object_id) as SchemaName,\n\tOBJECT_NAME(object_id) as TableName\nFROM \n\tsys.tables \nWHERE\n\tis_ms_shipped = 0 and OBJECT_NAME(object_id)<>'City' and OBJECT_NAME(object_id)<>'City_Staging'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WWIDW2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@item().SchemaName",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Parquet1",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@item().SchemaName",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												},
												"ContainerName": "raw"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/WWIDW2')]",
				"[concat(variables('workspaceId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('workspaceId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "siad-demo-ws2-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					},
					"ContainerName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(dataset().SchemaName,'\\',dataset().TableName)",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/siad-demo-ws2-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlPoolTable1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": "Fact",
					"table": "Order"
				},
				"sqlPool": {
					"referenceName": "mysqlpool1",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/mysqlpool1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlServerTable1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremise",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/onpremise')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WWIDW')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremise",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "OrderKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CityKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDateKey",
						"type": "date"
					},
					{
						"name": "PickedDateKey",
						"type": "date"
					},
					{
						"name": "SalespersonKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PickerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIBackorderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Package",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "TotalExcludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalIncludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "Fact",
					"table": "Order"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/onpremise')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WWIDW2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremise",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/onpremise')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/onprem')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('onprem_connectionString')]",
					"userName": "[parameters('onprem_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('onprem_password')]"
					}
				},
				"connectVia": {
					"referenceName": "sh-integration-runtime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/sh-integration-runtime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/onpremise')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('onpremise_connectionString')]",
					"userName": "[parameters('onpremise_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('onpremise_password')]"
					}
				},
				"connectVia": {
					"referenceName": "sh-integration-runtime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/sh-integration-runtime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/siad-demo-ws2-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('siad-demo-ws2-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/siad-demo-ws2-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('siad-demo-ws2-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sh-integration-runtime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/00 create Credential')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Polybase script"
				},
				"content": {
					"query": "-- A: Create a master key.\n-- Only necessary if one does not already exist.\n-- Required to encrypt the credential secret in the next step.\n\nCREATE MASTER KEY;\n\n\n-- B: Create a database scoped credential\n-- IDENTITY: Provide any string, it is not used for authentication to Azure storage.\n-- SECRET: Provide your Azure storage account key.\n\n\nCREATE DATABASE SCOPED CREDENTIAL AzureStorageCredential\nWITH\n    IDENTITY = 'user',\n    SECRET = '<azure_storage_account_key>'\n;\n\n\n-- C: Create an external data source\n-- TYPE: HADOOP - PolyBase uses Hadoop APIs to access data in Azure blob storage.\n-- LOCATION: Provide Azure storage account name and blob container name.\n-- CREDENTIAL: Provide the credential created in the previous step.\n\nCREATE EXTERNAL DATA SOURCE AzureStorage\nWITH (\n    TYPE = HADOOP,\n    LOCATION = 'wasbs://<blob_container_name>@<azure_storage_account_name>.blob.core.windows.net',\n    CREDENTIAL = AzureStorageCredential\n);",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/01 Create External Data Source')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Polybase script"
				},
				"content": {
					"query": "CREATE EXTERNAL DATA SOURCE AzureStorage_west_public\nWITH\n(  \n    TYPE = Hadoop\n,   LOCATION = 'wasbs://contosoretaildw-tables@contosoretaildw.blob.core.windows.net/'\n);",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "mysqlpool1",
						"poolName": "mysqlpool1"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/02 Create Data Format')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Polybase script"
				},
				"content": {
					"query": "CREATE EXTERNAL FILE FORMAT TextFileFormat\nWITH\n(   FORMAT_TYPE = DELIMITEDTEXT\n,    FORMAT_OPTIONS    (   FIELD_TERMINATOR = '|'\n                    ,    STRING_DELIMITER = ''\n                    ,    DATE_FORMAT         = 'yyyy-MM-dd HH:mm:ss.fff'\n                    ,    USE_TYPE_DEFAULT = FALSE\n                    )\n);",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "mysqlpool1",
						"poolName": "mysqlpool1"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/03 Create External tables')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Polybase script"
				},
				"content": {
					"query": "\nCREATE SCHEMA [asb];\nGO\n\n\n-- Now let's create the external tables. All we are doing here is defining column names and data types, \n-- and binding them to the location and format of the Azure blob storage files. The location is the folder \n-- under the root directory of the Azure Storage Blob.\n\n--DimAccount\nCREATE EXTERNAL TABLE [asb].DimAccount \n(\n\t[AccountKey] [int] NOT NULL,\n\t[ParentAccountKey] [int] NULL,\n\t[AccountLabel] [nvarchar](100) NULL,\n\t[AccountName] [nvarchar](50) NULL,\n\t[AccountDescription] [nvarchar](50) NULL,\n\t[AccountType] [nvarchar](50) NULL,\n\t[Operator] [nvarchar](50) NULL,\n\t[CustomMembers] [nvarchar](300) NULL,\n\t[ValueType] [nvarchar](50) NULL,\n\t[CustomMemberOptions] [nvarchar](200) NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH \n(\n    LOCATION='/DimAccount/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n \n--DimChannel\nCREATE EXTERNAL TABLE [asb].DimChannel \n(\n\t[ChannelKey] [int] NOT NULL,\n\t[ChannelLabel] [nvarchar](100) NOT NULL,\n\t[ChannelName] [nvarchar](20) NULL,\n\t[ChannelDescription] [nvarchar](50) NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/DimChannel/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n \n--DimCurrency\nCREATE EXTERNAL TABLE [asb].DimCurrency \n(\n\t[CurrencyKey] [int] NOT NULL,\n\t[CurrencyLabel] [nvarchar](10) NOT NULL,\n\t[CurrencyName] [nvarchar](20) NOT NULL,\n\t[CurrencyDescription] [nvarchar](50) NOT NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/DimCurrency/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n\n--DimCustomer\nCREATE EXTERNAL TABLE [asb].DimCustomer \n(\n\t[CustomerKey] [int]  NOT NULL,\n\t[GeographyKey] [int] NOT NULL,\n\t[CustomerLabel] [nvarchar](100) NOT NULL,\n\t[Title] [nvarchar](8) NULL,\n\t[FirstName] [nvarchar](50) NULL,\n\t[MiddleName] [nvarchar](50) NULL,\n\t[LastName] [nvarchar](50) NULL,\n\t[NameStyle] [bit] NULL,\n\t[BirthDate] [datetime] NULL,\n\t[MaritalStatus] [nchar](1) NULL,\n\t[Suffix] [nvarchar](10) NULL,\n\t[Gender] [nvarchar](1) NULL,\n\t[EmailAddress] [nvarchar](50) NULL,\n\t[YearlyIncome] [money] NULL,\n\t[TotalChildren] [tinyint] NULL,\n\t[NumberChildrenAtHome] [tinyint] NULL,\n\t[Education] [nvarchar](40) NULL,\n\t[Occupation] [nvarchar](100) NULL,\n\t[HouseOwnerFlag] [nchar](1) NULL,\n\t[NumberCarsOwned] [tinyint] NULL,\n\t[AddressLine1] [nvarchar](120) NULL,\n\t[AddressLine2] [nvarchar](120) NULL,\n\t[Phone] [nvarchar](20) NULL,\n\t[DateFirstPurchase] [datetime] NULL,\n\t[CustomerType] [nvarchar](15) NULL,\n\t[CompanyName] [nvarchar](100) NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/DimCustomer/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n\n--DimDate\nCREATE EXTERNAL TABLE [asb].DimDate\n(\n\t[Datekey] [datetime] NOT NULL,\n\t[FullDateLabel] [nvarchar](20) NOT NULL,\n\t[DateDescription] [nvarchar](20) NOT NULL,\n\t[CalendarYear] [int] NOT NULL,\n\t[CalendarYearLabel] [nvarchar](20) NOT NULL,\n\t[CalendarHalfYear] [int] NOT NULL,\n\t[CalendarHalfYearLabel] [nvarchar](20) NOT NULL,\n\t[CalendarQuarter] [int] NOT NULL,\n\t[CalendarQuarterLabel] [nvarchar](20) NULL,\n\t[CalendarMonth] [int] NOT NULL,\n\t[CalendarMonthLabel] [nvarchar](20) NOT NULL,\n\t[CalendarWeek] [int] NOT NULL,\n\t[CalendarWeekLabel] [nvarchar](20) NOT NULL,\n\t[CalendarDayOfWeek] [int] NOT NULL,\n\t[CalendarDayOfWeekLabel] [nvarchar](10) NOT NULL,\n\t[FiscalYear] [int] NOT NULL,\n\t[FiscalYearLabel] [nvarchar](20) NOT NULL,\n\t[FiscalHalfYear] [int] NOT NULL,\n\t[FiscalHalfYearLabel] [nvarchar](20) NOT NULL,\n\t[FiscalQuarter] [int] NOT NULL,\n\t[FiscalQuarterLabel] [nvarchar](20) NOT NULL,\n\t[FiscalMonth] [int] NOT NULL,\n\t[FiscalMonthLabel] [nvarchar](20) NOT NULL,\n\t[IsWorkDay] [nvarchar](20) NOT NULL,\n\t[IsHoliday] [int] NOT NULL,\n\t[HolidayName] [nvarchar](20) NOT NULL,\n\t[EuropeSeason] [nvarchar](50) NULL,\n\t[NorthAmericaSeason] [nvarchar](50) NULL,\n\t[AsiaSeason] [nvarchar](50) NULL\n)\nWITH\n(\n    LOCATION='/DimDate/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n \n--DimEmployee\nCREATE EXTERNAL TABLE [asb].DimEmployee \n(\n\t[EmployeeKey] [int]  NOT NULL,\n\t[ParentEmployeeKey] [int] NULL,\n\t[FirstName] [nvarchar](50) NOT NULL,\n\t[LastName] [nvarchar](50) NOT NULL,\n\t[MiddleName] [nvarchar](50) NULL,\n\t[Title] [nvarchar](50) NULL,\n\t[HireDate] [datetime] NULL,\n\t[BirthDate] [datetime] NULL,\n\t[EmailAddress] [nvarchar](50) NULL,\n\t[Phone] [nvarchar](25) NULL,\n\t[MaritalStatus] [nchar](1) NULL,\n\t[EmergencyContactName] [nvarchar](50) NULL,\n\t[EmergencyContactPhone] [nvarchar](25) NULL,\n\t[SalariedFlag] [bit] NULL,\n\t[Gender] [nchar](1) NULL,\n\t[PayFrequency] [tinyint] NULL,\n\t[BaseRate] [money] NULL,\n\t[VacationHours] [smallint] NULL,\n\t[CurrentFlag] [bit] NOT NULL,\n\t[SalesPersonFlag] [bit] NOT NULL,\n\t[DepartmentName] [nvarchar](50) NULL,\n\t[StartDate] [datetime] NULL,\n\t[EndDate] [datetime] NULL,\n\t[Status] [nvarchar](50) NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/DimEmployee/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n \n--DimEntity\nCREATE EXTERNAL TABLE [asb].DimEntity \n(\n\t[EntityKey] [int] NOT NULL,\n\t[EntityLabel] [nvarchar](100) NULL,\n\t[ParentEntityKey] [int] NULL,\n\t[ParentEntityLabel] [nvarchar](100) NULL,\n\t[EntityName] [nvarchar](50) NULL,\n\t[EntityDescription] [nvarchar](100) NULL,\n\t[EntityType] [nvarchar](100) NULL,\n\t[StartDate] [datetime] NULL,\n\t[EndDate] [datetime] NULL,\n\t[Status] [nvarchar](50) NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/DimEntity/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n \n--DimGeography\nCREATE EXTERNAL TABLE [asb].DimGeography \n(\n\t[GeographyKey] [int] NOT NULL,\n\t[GeographyType] [nvarchar](50) NOT NULL,\n\t[ContinentName] [nvarchar](50) NOT NULL,\n\t[CityName] [nvarchar](100) NULL,\n\t[StateProvinceName] [nvarchar](100) NULL,\n\t[RegionCountryName] [nvarchar](100) NULL,\n--\t[Geometry] [geometry] NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/DimGeography/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n \n--DimMachine\nCREATE EXTERNAL TABLE [asb].DimMachine \n(\n\t[MachineKey] [int] NOT NULL,\n\t[MachineLabel] [nvarchar](100) NULL,\n\t[StoreKey] [int] NOT NULL,\n\t[MachineType] [nvarchar](50) NOT NULL,\n\t[MachineName] [nvarchar](100) NOT NULL,\n\t[MachineDescription] [nvarchar](200) NOT NULL,\n\t[VendorName] [nvarchar](50) NOT NULL,\n\t[MachineOS] [nvarchar](50) NOT NULL,\n\t[MachineSource] [nvarchar](100) NOT NULL,\n\t[MachineHardware] [nvarchar](100) NULL,\n\t[MachineSoftware] [nvarchar](100) NOT NULL,\n\t[Status] [nvarchar](50) NOT NULL,\n\t[ServiceStartDate] [datetime] NOT NULL,\n\t[DecommissionDate] [datetime] NULL,\n\t[LastModifiedDate] [datetime] NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/DimMachine/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n \n--DimOutage\nCREATE EXTERNAL TABLE [asb].DimOutage (\n\t[OutageKey] [int]  NOT NULL,\n\t[OutageLabel] [nvarchar](100) NOT NULL,\n\t[OutageName] [nvarchar](50) NOT NULL,\n\t[OutageDescription] [nvarchar](200) NOT NULL,\n\t[OutageType] [nvarchar](50) NOT NULL,\n\t[OutageTypeDescription] [nvarchar](200) NOT NULL,\n\t[OutageSubType] [nvarchar](50) NOT NULL,\n\t[OutageSubTypeDescription] [nvarchar](200) NOT NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/DimOutage/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n \n--DimProduct\nCREATE EXTERNAL TABLE [asb].DimProduct (\n\t[ProductKey] [int] NOT NULL,\n\t[ProductLabel] [nvarchar](255) NULL,\n\t[ProductName] [nvarchar](500) NULL,\n\t[ProductDescription] [nvarchar](400) NULL,\n\t[ProductSubcategoryKey] [int] NULL,\n\t[Manufacturer] [nvarchar](50) NULL,\n\t[BrandName] [nvarchar](50) NULL,\n\t[ClassID] [nvarchar](10) NULL,\n\t[ClassName] [nvarchar](20) NULL,\n\t[StyleID] [nvarchar](10) NULL,\n\t[StyleName] [nvarchar](20) NULL,\n\t[ColorID] [nvarchar](10) NULL,\n\t[ColorName] [nvarchar](20) NOT NULL,\n\t[Size] [nvarchar](50) NULL,\n\t[SizeRange] [nvarchar](50) NULL,\n\t[SizeUnitMeasureID] [nvarchar](20) NULL,\n\t[Weight] [float] NULL,\n\t[WeightUnitMeasureID] [nvarchar](20) NULL,\n\t[UnitOfMeasureID] [nvarchar](10) NULL,\n\t[UnitOfMeasureName] [nvarchar](40) NULL,\n\t[StockTypeID] [nvarchar](10) NULL,\n\t[StockTypeName] [nvarchar](40) NULL,\n\t[UnitCost] [money] NULL,\n\t[UnitPrice] [money] NULL,\n\t[AvailableForSaleDate] [datetime] NULL,\n\t[StopSaleDate] [datetime] NULL,\n\t[Status] [nvarchar](7) NULL,\n\t[ImageURL] [nvarchar](150) NULL,\n\t[ProductURL] [nvarchar](150) NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/DimProduct/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n \n--DimProductCategory\nCREATE EXTERNAL TABLE [asb].DimProductCategory (\n\t[ProductCategoryKey] [int]  NOT NULL,\n\t[ProductCategoryLabel] [nvarchar](100) NULL,\n\t[ProductCategoryName] [nvarchar](30) NOT NULL,\n\t[ProductCategoryDescription] [nvarchar](50) NOT NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/DimProductCategory/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n \n--DimProductSubcategory\nCREATE EXTERNAL TABLE [asb].DimProductSubcategory (\n\t[ProductSubcategoryKey] [int]  NOT NULL,\n\t[ProductSubcategoryLabel] [nvarchar](100) NULL,\n\t[ProductSubcategoryName] [nvarchar](50) NOT NULL,\n\t[ProductSubcategoryDescription] [nvarchar](100) NULL,\n\t[ProductCategoryKey] [int] NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/DimProductSubcategory/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n \n--DimPromotion\nCREATE EXTERNAL TABLE [asb].DimPromotion (\n\t[PromotionKey] [int]  NOT NULL,\n\t[PromotionLabel] [nvarchar](100) NULL,\n\t[PromotionName] [nvarchar](100) NULL,\n\t[PromotionDescription] [nvarchar](255) NULL,\n\t[DiscountPercent] [float] NULL,\n\t[PromotionType] [nvarchar](50) NULL,\n\t[PromotionCategory] [nvarchar](50) NULL,\n\t[StartDate] [datetime] NOT NULL,\n\t[EndDate] [datetime] NULL,\n\t[MinQuantity] [int] NULL,\n\t[MaxQuantity] [int] NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/DimPromotion/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n \n \n--DimSalesTerritory\nCREATE EXTERNAL TABLE [asb].DimSalesTerritory (\n\t[SalesTerritoryKey] [int]  NOT NULL,\n\t[GeographyKey] [int] NOT NULL,\n\t[SalesTerritoryLabel] [nvarchar](100) NULL,\n\t[SalesTerritoryName] [nvarchar](50) NOT NULL,\n\t[SalesTerritoryRegion] [nvarchar](50) NOT NULL,\n\t[SalesTerritoryCountry] [nvarchar](50) NOT NULL,\n\t[SalesTerritoryGroup] [nvarchar](50) NULL,\n\t[SalesTerritoryLevel] [nvarchar](10) NULL,\n\t[SalesTerritoryManager] [int] NULL,\n\t[StartDate] [datetime] NULL,\n\t[EndDate] [datetime] NULL,\n\t[Status] [nvarchar](50) NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/DimSalesTerritory/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n \n--DimScenario\nCREATE EXTERNAL TABLE [asb].DimScenario (\n\t[ScenarioKey] [int] NOT NULL,\n\t[ScenarioLabel] [nvarchar](100) NOT NULL,\n\t[ScenarioName] [nvarchar](20) NULL,\n\t[ScenarioDescription] [nvarchar](50) NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/DimScenario/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n\n--DimStore\nCREATE EXTERNAL TABLE [asb].DimStore \n(\n\t[StoreKey] [int] NOT NULL,\n\t[GeographyKey] [int] NOT NULL,\n\t[StoreManager] [int] NULL,\n\t[StoreType] [nvarchar](15) NULL,\n\t[StoreName] [nvarchar](100) NOT NULL,\n\t[StoreDescription] [nvarchar](300) NOT NULL,\n\t[Status] [nvarchar](20) NOT NULL,\n\t[OpenDate] [datetime] NOT NULL,\n\t[CloseDate] [datetime] NULL,\n\t[EntityKey] [int] NULL,\n\t[ZipCode] [nvarchar](20) NULL,\n\t[ZipCodeExtension] [nvarchar](10) NULL,\n\t[StorePhone] [nvarchar](15) NULL,\n\t[StoreFax] [nvarchar](14) NULL,\n\t[AddressLine1] [nvarchar](100) NULL,\n\t[AddressLine2] [nvarchar](100) NULL,\n\t[CloseReason] [nvarchar](20) NULL,\n\t[EmployeeCount] [int] NULL,\n\t[SellingAreaSize] [float] NULL,\n\t[LastRemodelDate] [datetime] NULL,\n\t[GeoLocation]\tNVARCHAR(50)  NULL,\n\t[Geometry]\t\tNVARCHAR(50) NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/DimStore/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n\n--FactExchangeRate\nCREATE EXTERNAL TABLE [asb].FactExchangeRate \n(\n\t[ExchangeRateKey] [int]  NOT NULL,\n\t[CurrencyKey] [int] NOT NULL,\n\t[DateKey] [datetime] NOT NULL,\n\t[AverageRate] [float] NOT NULL,\n\t[EndOfDayRate] [float] NOT NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/FactExchangeRate/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n \n--FactInventory\nCREATE EXTERNAL TABLE [asb].FactInventory (\n\t[InventoryKey] [int]  NOT NULL,\n\t[DateKey] [datetime] NOT NULL,\n\t[StoreKey] [int] NOT NULL,\n\t[ProductKey] [int] NOT NULL,\n\t[CurrencyKey] [int] NOT NULL,\n\t[OnHandQuantity] [int] NOT NULL,\n\t[OnOrderQuantity] [int] NOT NULL,\n\t[SafetyStockQuantity] [int] NULL,\n\t[UnitCost] [money] NOT NULL,\n\t[DaysInStock] [int] NULL,\n\t[MinDayInStock] [int] NULL,\n\t[MaxDayInStock] [int] NULL,\n\t[Aging] [int] NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/FactInventory/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n\n--FactITMachine\nCREATE EXTERNAL TABLE [asb].FactITMachine (\n\t[ITMachinekey] [int] NOT NULL,\n\t[MachineKey] [int] NOT NULL,\n\t[Datekey] [datetime] NOT NULL,\n\t[CostAmount] [money] NULL,\n\t[CostType] [nvarchar](200) NOT NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/FactITMachine/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n\n\n--FactITSLA\nCREATE EXTERNAL TABLE [asb].FactITSLA \n(\n\t[ITSLAkey] [int]  NOT NULL,\n\t[DateKey] [datetime] NOT NULL,\n\t[StoreKey] [int] NOT NULL,\n\t[MachineKey] [int] NOT NULL,\n\t[OutageKey] [int] NOT NULL,\n\t[OutageStartTime] [datetime] NOT NULL,\n\t[OutageEndTime] [datetime] NOT NULL,\n\t[DownTime] [int] NOT NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/FactITSLA/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n\n--FactOnlineSales\nCREATE EXTERNAL TABLE [asb].FactOnlineSales \n(\n\t[OnlineSalesKey] [int]  NOT NULL,\n\t[DateKey] [datetime] NOT NULL,\n\t[StoreKey] [int] NOT NULL,\n\t[ProductKey] [int] NOT NULL,\n\t[PromotionKey] [int] NOT NULL,\n\t[CurrencyKey] [int] NOT NULL,\n\t[CustomerKey] [int] NOT NULL,\n\t[SalesOrderNumber] [nvarchar](20) NOT NULL,\n\t[SalesOrderLineNumber] [int] NULL,\n\t[SalesQuantity] [int] NOT NULL,\n\t[SalesAmount] [money] NOT NULL,\n\t[ReturnQuantity] [int] NOT NULL,\n\t[ReturnAmount] [money] NULL,\n\t[DiscountQuantity] [int] NULL,\n\t[DiscountAmount] [money] NULL,\n\t[TotalCost] [money] NOT NULL,\n\t[UnitCost] [money] NULL,\n\t[UnitPrice] [money] NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/FactOnlineSales/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n \n--FactSales\nCREATE EXTERNAL TABLE [asb].FactSales \n(\n\t[SalesKey] [int]  NOT NULL,\n\t[DateKey] [datetime] NOT NULL,\n\t[channelKey] [int] NOT NULL,\n\t[StoreKey] [int] NOT NULL,\n\t[ProductKey] [int] NOT NULL,\n\t[PromotionKey] [int] NOT NULL,\n\t[CurrencyKey] [int] NOT NULL,\n\t[UnitCost] [money] NOT NULL,\n\t[UnitPrice] [money] NOT NULL,\n\t[SalesQuantity] [int] NOT NULL,\n\t[ReturnQuantity] [int] NOT NULL,\n\t[ReturnAmount] [money] NULL,\n\t[DiscountQuantity] [int] NULL,\n\t[DiscountAmount] [money] NULL,\n\t[TotalCost] [money] NOT NULL,\n\t[SalesAmount] [money] NOT NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/FactSales/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n\n--FactSalesQuota\nCREATE EXTERNAL TABLE [asb].FactSalesQuota (\n\t[SalesQuotaKey] [int]  NOT NULL,\n\t[ChannelKey] [int] NOT NULL,\n\t[StoreKey] [int] NOT NULL,\n\t[ProductKey] [int] NOT NULL,\n\t[DateKey] [datetime] NOT NULL,\n\t[CurrencyKey] [int] NOT NULL,\n\t[ScenarioKey] [int] NOT NULL,\n\t[SalesQuantityQuota] [money] NOT NULL,\n\t[SalesAmountQuota] [money] NOT NULL,\n\t[GrossMarginQuota] [money] NOT NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/FactSalesQuota/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n \n--FactStrategyPlan\nCREATE EXTERNAL TABLE [asb].FactStrategyPlan \n(\n\t[StrategyPlanKey] [int]  NOT NULL,\n\t[Datekey] [datetime] NOT NULL,\n\t[EntityKey] [int] NOT NULL,\n\t[ScenarioKey] [int] NOT NULL,\n\t[AccountKey] [int] NOT NULL,\n\t[CurrencyKey] [int] NOT NULL,\n\t[ProductCategoryKey] [int] NULL,\n\t[Amount] [money] NOT NULL,\n\t[ETLLoadID] [int] NULL,\n\t[LoadDate] [datetime] NULL,\n\t[UpdateDate] [datetime] NULL\n)\nWITH\n(\n    LOCATION='/FactStrategyPlan/' \n,   DATA_SOURCE = AzureStorage_west_public\n,   FILE_FORMAT = TextFileFormat\n,   REJECT_TYPE = VALUE\n,   REJECT_VALUE = 0\n)\n;\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "mysqlpool1",
						"poolName": "mysqlpool1"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/04 CTAS tables for Data load')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Polybase script"
				},
				"content": {
					"query": "CREATE SCHEMA [cso];\nGO\n\n\n-- Load the data\n-- To load the data we use one CTAS statement per table.\n\nSELECT GETDATE();\nGO\nCREATE TABLE [cso].[DimAccount]            WITH (DISTRIBUTION = ROUND_ROBIN        )   AS SELECT * FROM [asb].[DimAccount]             OPTION (LABEL = 'CTAS : Load [cso].[DimAccount]             ');\nCREATE TABLE [cso].[DimChannel]            WITH (DISTRIBUTION = ROUND_ROBIN        )   AS SELECT * FROM [asb].[DimChannel]             OPTION (LABEL = 'CTAS : Load [cso].[DimChannel]             ');\nCREATE TABLE [cso].[DimCurrency]           WITH (DISTRIBUTION = ROUND_ROBIN        )   AS SELECT * FROM [asb].[DimCurrency]            OPTION (LABEL = 'CTAS : Load [cso].[DimCurrency]            ');\nCREATE TABLE [cso].[DimCustomer]           WITH (DISTRIBUTION = ROUND_ROBIN        )   AS SELECT * FROM [asb].[DimCustomer]            OPTION (LABEL = 'CTAS : Load [cso].[DimCustomer]            ');\nCREATE TABLE [cso].[DimDate]               WITH (DISTRIBUTION = ROUND_ROBIN        )   AS SELECT * FROM [asb].[DimDate]                OPTION (LABEL = 'CTAS : Load [cso].[DimDate]                ');\nCREATE TABLE [cso].[DimEmployee]           WITH (DISTRIBUTION = ROUND_ROBIN        )   AS SELECT * FROM [asb].[DimEmployee]            OPTION (LABEL = 'CTAS : Load [cso].[DimEmployee]            ');\nCREATE TABLE [cso].[DimEntity]             WITH (DISTRIBUTION = HASH([EntityKey]   ) ) AS SELECT * FROM [asb].[DimEntity]              OPTION (LABEL = 'CTAS : Load [cso].[DimEntity]              ');\nCREATE TABLE [cso].[DimGeography]          WITH (DISTRIBUTION = ROUND_ROBIN        )   AS SELECT * FROM [asb].[DimGeography]           OPTION (LABEL = 'CTAS : Load [cso].[DimGeography]           ');\nCREATE TABLE [cso].[DimMachine]            WITH (DISTRIBUTION = HASH([MachineKey]  ) ) AS SELECT * FROM [asb].[DimMachine]             OPTION (LABEL = 'CTAS : Load [cso].[DimMachine]             ');\nCREATE TABLE [cso].[DimOutage]             WITH (DISTRIBUTION = ROUND_ROBIN        )   AS SELECT * FROM [asb].[DimOutage]              OPTION (LABEL = 'CTAS : Load [cso].[DimOutage]              ');\nCREATE TABLE [cso].[DimProduct]            WITH (DISTRIBUTION = HASH([ProductKey]  ) ) AS SELECT * FROM [asb].[DimProduct]             OPTION (LABEL = 'CTAS : Load [cso].[DimProduct]             ');\nCREATE TABLE [cso].[DimProductCategory]    WITH (DISTRIBUTION = ROUND_ROBIN        )   AS SELECT * FROM [asb].[DimProductCategory]     OPTION (LABEL = 'CTAS : Load [cso].[DimProductCategory]     ');\nCREATE TABLE [cso].[DimScenario]           WITH (DISTRIBUTION = ROUND_ROBIN        )   AS SELECT * FROM [asb].[DimScenario]            OPTION (LABEL = 'CTAS : Load [cso].[DimScenario]            ');\nCREATE TABLE [cso].[DimPromotion]          WITH (DISTRIBUTION = ROUND_ROBIN        )   AS SELECT * FROM [asb].[DimPromotion]           OPTION (LABEL = 'CTAS : Load [cso].[DimPromotion]           ');\nCREATE TABLE [cso].[DimProductSubcategory] WITH (DISTRIBUTION = ROUND_ROBIN        )   AS SELECT * FROM [asb].[DimProductSubcategory]  OPTION (LABEL = 'CTAS : Load [cso].[DimProductSubcategory]  ');\nCREATE TABLE [cso].[DimSalesTerritory]     WITH (DISTRIBUTION = ROUND_ROBIN        )   AS SELECT * FROM [asb].[DimSalesTerritory]      OPTION (LABEL = 'CTAS : Load [cso].[DimSalesTerritory]      ');\nCREATE TABLE [cso].[DimStore]              WITH (DISTRIBUTION = ROUND_ROBIN        )   AS SELECT * FROM [asb].[DimStore]               OPTION (LABEL = 'CTAS : Load [cso].[DimStore]               ');\nCREATE TABLE [cso].[FactITMachine]         WITH (DISTRIBUTION = HASH([MachineKey]  ) ) AS SELECT * FROM [asb].[FactITMachine]          OPTION (LABEL = 'CTAS : Load [cso].[FactITMachine]          ');\nCREATE TABLE [cso].[FactITSLA]             WITH (DISTRIBUTION = HASH([MachineKey]  ) ) AS SELECT * FROM [asb].[FactITSLA]              OPTION (LABEL = 'CTAS : Load [cso].[FactITSLA]              ');\nCREATE TABLE [cso].[FactInventory]         WITH (DISTRIBUTION = HASH([ProductKey]  ) ) AS SELECT * FROM [asb].[FactInventory]          OPTION (LABEL = 'CTAS : Load [cso].[FactInventory]          ');\nCREATE TABLE [cso].[FactOnlineSales]       WITH (DISTRIBUTION = HASH([ProductKey]  ) ) AS SELECT * FROM [asb].[FactOnlineSales]        OPTION (LABEL = 'CTAS : Load [cso].[FactOnlineSales]        ');\nCREATE TABLE [cso].[FactSales]             WITH (DISTRIBUTION = HASH([ProductKey]  ) ) AS SELECT * FROM [asb].[FactSales]              OPTION (LABEL = 'CTAS : Load [cso].[FactSales]              ');\nCREATE TABLE [cso].[FactSalesQuota]        WITH (DISTRIBUTION = HASH([ProductKey]  ) ) AS SELECT * FROM [asb].[FactSalesQuota]         OPTION (LABEL = 'CTAS : Load [cso].[FactSalesQuota]         ');\nCREATE TABLE [cso].[FactStrategyPlan]      WITH (DISTRIBUTION = HASH([EntityKey])  )   AS SELECT * FROM [asb].[FactStrategyPlan]       OPTION (LABEL = 'CTAS : Load [cso].[FactStrategyPlan]       ');\nCREATE TABLE [cso].[FactExchangeRate]      WITH (DISTRIBUTION = HASH([ExchangeRateKey])  ) AS SELECT * FROM [asb].[FactExchangeRate]    OPTION (LABEL = 'CTAS : Load [cso].[FactExchangeRate]       ');\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "mysqlpool1",
						"poolName": "mysqlpool1"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/05 QuerySample')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Polybase script"
				},
				"content": {
					"query": "--You can now start querying the tables using queries like this. :\n\nSELECT  SUM(f.[SalesAmount]) AS [sales_by_brand_amount]\n,       p.[BrandName]\nFROM    [cso].[FactOnlineSales] AS f\nJOIN    [cso].[DimProduct]      AS p ON f.[ProductKey] = p.[ProductKey]\nGROUP BY p.[BrandName]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "mysqlpool1",
						"poolName": "mysqlpool1"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/06 CCI rebuild')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Polybase script"
				},
				"content": {
					"query": "-- Optimize columnstore compression\n-- By default, SQL Pool stores the table as a clustered columnstore index. \n-- After a load completes, some of the data rows might not be compressed into the columnstore.\n-- There's a variety of reasons why this can happen. To learn more, see ... .\n--\n-- To optimize query performance and columnstore compression after a load, rebuild the table to force\n-- the columnstore index to compress all the rows. \n\nSELECT GETDATE();\nGO\nALTER INDEX ALL ON [cso].[FactStrategyPlan]         REBUILD;\nALTER INDEX ALL ON [cso].[DimAccount]               REBUILD;\nALTER INDEX ALL ON [cso].[DimChannel]               REBUILD;\nALTER INDEX ALL ON [cso].[DimCurrency]              REBUILD;\nALTER INDEX ALL ON [cso].[DimCustomer]              REBUILD;\nALTER INDEX ALL ON [cso].[DimDate]                  REBUILD;\nALTER INDEX ALL ON [cso].[DimEmployee]              REBUILD;\nALTER INDEX ALL ON [cso].[DimEntity]                REBUILD;\nALTER INDEX ALL ON [cso].[DimGeography]             REBUILD;\nALTER INDEX ALL ON [cso].[DimMachine]               REBUILD;\nALTER INDEX ALL ON [cso].[DimOutage]                REBUILD;\nALTER INDEX ALL ON [cso].[DimProduct]               REBUILD;\nALTER INDEX ALL ON [cso].[DimProductCategory]       REBUILD;\nALTER INDEX ALL ON [cso].[DimScenario]              REBUILD;\nALTER INDEX ALL ON [cso].[DimPromotion]             REBUILD;\nALTER INDEX ALL ON [cso].[DimProductSubcategory]    REBUILD;\nALTER INDEX ALL ON [cso].[DimSalesTerritory]        REBUILD;\nALTER INDEX ALL ON [cso].[DimStore]                 REBUILD;\nALTER INDEX ALL ON [cso].[FactITMachine]            REBUILD;\nALTER INDEX ALL ON [cso].[FactITSLA]                REBUILD;\nALTER INDEX ALL ON [cso].[FactInventory]            REBUILD;\nALTER INDEX ALL ON [cso].[FactOnlineSales]          REBUILD;\nALTER INDEX ALL ON [cso].[FactSales]                REBUILD;\nALTER INDEX ALL ON [cso].[FactSalesQuota]           REBUILD;\nALTER INDEX ALL ON [cso].[FactExchangeRate]         REBUILD;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "mysqlpool1",
						"poolName": "mysqlpool1"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/07 Create Statistics')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Polybase script"
				},
				"content": {
					"query": "-- Optimize statistics\n-- It is best to create single-column statistics immediately after a load. There are some choices for statistics. -- For example, if you create single-column statistics on every column it might take a long time to rebuild \n-- statistics. If you know certain columns are not going to be in query predicates, you could skip creating\n-- statistics on those columns.\n--\n-- If you decide to create single-column statistics on every column, you can use stored procedure code \n-- sample `prc_sqldw_create_stats` in the [statistics][] article.\n--\n-- This example is a good starting point for creating statistics. It creates single-column statistics on each \n-- column in the dimension table, and on each joining column in the fact tables. You can always add single or \n-- multi-column statistics to other fact table columns later on.\n--\n\nCREATE STATISTICS [stat_cso_DimMachine_DecommissionDate] ON [cso].[DimMachine]([DecommissionDate]);\nCREATE STATISTICS [stat_cso_DimMachine_ETLLoadID] ON [cso].[DimMachine]([ETLLoadID]);\nCREATE STATISTICS [stat_cso_DimMachine_LastModifiedDate] ON [cso].[DimMachine]([LastModifiedDate]);\nCREATE STATISTICS [stat_cso_DimMachine_LoadDate] ON [cso].[DimMachine]([LoadDate]);\nCREATE STATISTICS [stat_cso_DimMachine_MachineDescription] ON [cso].[DimMachine]([MachineDescription]);\nCREATE STATISTICS [stat_cso_DimMachine_MachineHardware] ON [cso].[DimMachine]([MachineHardware]);\nCREATE STATISTICS [stat_cso_DimMachine_MachineKey] ON [cso].[DimMachine]([MachineKey]);\nCREATE STATISTICS [stat_cso_DimMachine_MachineLabel] ON [cso].[DimMachine]([MachineLabel]);\nCREATE STATISTICS [stat_cso_DimMachine_MachineName] ON [cso].[DimMachine]([MachineName]);\nCREATE STATISTICS [stat_cso_DimMachine_MachineOS] ON [cso].[DimMachine]([MachineOS]);\nCREATE STATISTICS [stat_cso_DimMachine_MachineSoftware] ON [cso].[DimMachine]([MachineSoftware]);\nCREATE STATISTICS [stat_cso_DimMachine_MachineSource] ON [cso].[DimMachine]([MachineSource]);\nCREATE STATISTICS [stat_cso_DimMachine_MachineType] ON [cso].[DimMachine]([MachineType]);\nCREATE STATISTICS [stat_cso_DimMachine_ServiceStartDate] ON [cso].[DimMachine]([ServiceStartDate]);\nCREATE STATISTICS [stat_cso_DimMachine_Status] ON [cso].[DimMachine]([Status]);\nCREATE STATISTICS [stat_cso_DimMachine_StoreKey] ON [cso].[DimMachine]([StoreKey]);\nCREATE STATISTICS [stat_cso_DimMachine_UpdateDate] ON [cso].[DimMachine]([UpdateDate]);\nCREATE STATISTICS [stat_cso_DimMachine_VendorName] ON [cso].[DimMachine]([VendorName]);\nCREATE STATISTICS [stat_cso_DimOutage_ETLLoadID] ON [cso].[DimOutage]([ETLLoadID]);\nCREATE STATISTICS [stat_cso_DimOutage_LoadDate] ON [cso].[DimOutage]([LoadDate]);\nCREATE STATISTICS [stat_cso_DimOutage_OutageDescription] ON [cso].[DimOutage]([OutageDescription]);\nCREATE STATISTICS [stat_cso_DimOutage_OutageKey] ON [cso].[DimOutage]([OutageKey]);\nCREATE STATISTICS [stat_cso_DimOutage_OutageLabel] ON [cso].[DimOutage]([OutageLabel]);\nCREATE STATISTICS [stat_cso_DimOutage_OutageName] ON [cso].[DimOutage]([OutageName]);\nCREATE STATISTICS [stat_cso_DimOutage_OutageSubType] ON [cso].[DimOutage]([OutageSubType]);\nCREATE STATISTICS [stat_cso_DimOutage_OutageSubTypeDescription] ON [cso].[DimOutage]([OutageSubTypeDescription]);\nCREATE STATISTICS [stat_cso_DimOutage_OutageType] ON [cso].[DimOutage]([OutageType]);\nCREATE STATISTICS [stat_cso_DimOutage_OutageTypeDescription] ON [cso].[DimOutage]([OutageTypeDescription]);\nCREATE STATISTICS [stat_cso_DimOutage_UpdateDate] ON [cso].[DimOutage]([UpdateDate]);\nCREATE STATISTICS [stat_cso_DimProductCategory_ETLLoadID] ON [cso].[DimProductCategory]([ETLLoadID]);\nCREATE STATISTICS [stat_cso_DimProductCategory_LoadDate] ON [cso].[DimProductCategory]([LoadDate]);\nCREATE STATISTICS [stat_cso_DimProductCategory_ProductCategoryDescription] ON [cso].[DimProductCategory]([ProductCategoryDescription]);\nCREATE STATISTICS [stat_cso_DimProductCategory_ProductCategoryKey] ON [cso].[DimProductCategory]([ProductCategoryKey]);\nCREATE STATISTICS [stat_cso_DimProductCategory_ProductCategoryLabel] ON [cso].[DimProductCategory]([ProductCategoryLabel]);\nCREATE STATISTICS [stat_cso_DimProductCategory_ProductCategoryName] ON [cso].[DimProductCategory]([ProductCategoryName]);\nCREATE STATISTICS [stat_cso_DimProductCategory_UpdateDate] ON [cso].[DimProductCategory]([UpdateDate]);\nCREATE STATISTICS [stat_cso_DimScenario_ETLLoadID] ON [cso].[DimScenario]([ETLLoadID]);\nCREATE STATISTICS [stat_cso_DimScenario_LoadDate] ON [cso].[DimScenario]([LoadDate]);\nCREATE STATISTICS [stat_cso_DimScenario_ScenarioDescription] ON [cso].[DimScenario]([ScenarioDescription]);\nCREATE STATISTICS [stat_cso_DimScenario_ScenarioKey] ON [cso].[DimScenario]([ScenarioKey]);\nCREATE STATISTICS [stat_cso_DimScenario_ScenarioLabel] ON [cso].[DimScenario]([ScenarioLabel]);\nCREATE STATISTICS [stat_cso_DimScenario_ScenarioName] ON [cso].[DimScenario]([ScenarioName]);\nCREATE STATISTICS [stat_cso_DimScenario_UpdateDate] ON [cso].[DimScenario]([UpdateDate]);\nCREATE STATISTICS [stat_cso_DimPromotion_DiscountPercent] ON [cso].[DimPromotion]([DiscountPercent]);\nCREATE STATISTICS [stat_cso_DimPromotion_EndDate] ON [cso].[DimPromotion]([EndDate]);\nCREATE STATISTICS [stat_cso_DimPromotion_ETLLoadID] ON [cso].[DimPromotion]([ETLLoadID]);\nCREATE STATISTICS [stat_cso_DimPromotion_LoadDate] ON [cso].[DimPromotion]([LoadDate]);\nCREATE STATISTICS [stat_cso_DimPromotion_MaxQuantity] ON [cso].[DimPromotion]([MaxQuantity]);\nCREATE STATISTICS [stat_cso_DimPromotion_MinQuantity] ON [cso].[DimPromotion]([MinQuantity]);\nCREATE STATISTICS [stat_cso_DimPromotion_PromotionCategory] ON [cso].[DimPromotion]([PromotionCategory]);\nCREATE STATISTICS [stat_cso_DimPromotion_PromotionDescription] ON [cso].[DimPromotion]([PromotionDescription]);\nCREATE STATISTICS [stat_cso_DimPromotion_PromotionKey] ON [cso].[DimPromotion]([PromotionKey]);\nCREATE STATISTICS [stat_cso_DimPromotion_PromotionLabel] ON [cso].[DimPromotion]([PromotionLabel]);\nCREATE STATISTICS [stat_cso_DimPromotion_PromotionName] ON [cso].[DimPromotion]([PromotionName]);\nCREATE STATISTICS [stat_cso_DimPromotion_PromotionType] ON [cso].[DimPromotion]([PromotionType]);\nCREATE STATISTICS [stat_cso_DimPromotion_StartDate] ON [cso].[DimPromotion]([StartDate]);\nCREATE STATISTICS [stat_cso_DimPromotion_UpdateDate] ON [cso].[DimPromotion]([UpdateDate]);\nCREATE STATISTICS [stat_cso_DimSalesTerritory_EndDate] ON [cso].[DimSalesTerritory]([EndDate]);\nCREATE STATISTICS [stat_cso_DimSalesTerritory_ETLLoadID] ON [cso].[DimSalesTerritory]([ETLLoadID]);\nCREATE STATISTICS [stat_cso_DimSalesTerritory_GeographyKey] ON [cso].[DimSalesTerritory]([GeographyKey]);\nCREATE STATISTICS [stat_cso_DimSalesTerritory_LoadDate] ON [cso].[DimSalesTerritory]([LoadDate]);\nCREATE STATISTICS [stat_cso_DimSalesTerritory_SalesTerritoryCountry] ON [cso].[DimSalesTerritory]([SalesTerritoryCountry]);\nCREATE STATISTICS [stat_cso_DimSalesTerritory_SalesTerritoryGroup] ON [cso].[DimSalesTerritory]([SalesTerritoryGroup]);\nCREATE STATISTICS [stat_cso_DimSalesTerritory_SalesTerritoryKey] ON [cso].[DimSalesTerritory]([SalesTerritoryKey]);\nCREATE STATISTICS [stat_cso_DimSalesTerritory_SalesTerritoryLabel] ON [cso].[DimSalesTerritory]([SalesTerritoryLabel]);\nCREATE STATISTICS [stat_cso_DimSalesTerritory_SalesTerritoryLevel] ON [cso].[DimSalesTerritory]([SalesTerritoryLevel]);\nCREATE STATISTICS [stat_cso_DimSalesTerritory_SalesTerritoryManager] ON [cso].[DimSalesTerritory]([SalesTerritoryManager]);\nCREATE STATISTICS [stat_cso_DimSalesTerritory_SalesTerritoryName] ON [cso].[DimSalesTerritory]([SalesTerritoryName]);\nCREATE STATISTICS [stat_cso_DimSalesTerritory_SalesTerritoryRegion] ON [cso].[DimSalesTerritory]([SalesTerritoryRegion]);\nCREATE STATISTICS [stat_cso_DimSalesTerritory_StartDate] ON [cso].[DimSalesTerritory]([StartDate]);\nCREATE STATISTICS [stat_cso_DimSalesTerritory_Status] ON [cso].[DimSalesTerritory]([Status]);\nCREATE STATISTICS [stat_cso_DimSalesTerritory_UpdateDate] ON [cso].[DimSalesTerritory]([UpdateDate]);\nCREATE STATISTICS [stat_cso_DimProductSubcategory_ETLLoadID] ON [cso].[DimProductSubcategory]([ETLLoadID]);\nCREATE STATISTICS [stat_cso_DimProductSubcategory_LoadDate] ON [cso].[DimProductSubcategory]([LoadDate]);\nCREATE STATISTICS [stat_cso_DimProductSubcategory_ProductCategoryKey] ON [cso].[DimProductSubcategory]([ProductCategoryKey]);\nCREATE STATISTICS [stat_cso_DimProductSubcategory_ProductSubcategoryDescription] ON [cso].[DimProductSubcategory]([ProductSubcategoryDescription]);\nCREATE STATISTICS [stat_cso_DimProductSubcategory_ProductSubcategoryKey] ON [cso].[DimProductSubcategory]([ProductSubcategoryKey]);\nCREATE STATISTICS [stat_cso_DimProductSubcategory_ProductSubcategoryLabel] ON [cso].[DimProductSubcategory]([ProductSubcategoryLabel]);\nCREATE STATISTICS [stat_cso_DimProductSubcategory_ProductSubcategoryName] ON [cso].[DimProductSubcategory]([ProductSubcategoryName]);\nCREATE STATISTICS [stat_cso_DimProductSubcategory_UpdateDate] ON [cso].[DimProductSubcategory]([UpdateDate]);\nCREATE STATISTICS [stat_cso_FactITMachine_Datekey] ON [cso].[FactITMachine]([Datekey]);\nCREATE STATISTICS [stat_cso_FactITMachine_ITMachinekey] ON [cso].[FactITMachine]([ITMachinekey]);\nCREATE STATISTICS [stat_cso_FactITMachine_MachineKey] ON [cso].[FactITMachine]([MachineKey]);\nCREATE STATISTICS [stat_cso_FactInventory_CurrencyKey] ON [cso].[FactInventory]([CurrencyKey]);\nCREATE STATISTICS [stat_cso_FactInventory_DateKey] ON [cso].[FactInventory]([DateKey]);\nCREATE STATISTICS [stat_cso_FactInventory_InventoryKey] ON [cso].[FactInventory]([InventoryKey]);\nCREATE STATISTICS [stat_cso_FactInventory_ProductKey] ON [cso].[FactInventory]([ProductKey]);\nCREATE STATISTICS [stat_cso_FactInventory_StoreKey] ON [cso].[FactInventory]([StoreKey]);\nCREATE STATISTICS [stat_cso_FactStrategyPlan_AccountKey] ON [cso].[FactStrategyPlan]([AccountKey]);\nCREATE STATISTICS [stat_cso_FactStrategyPlan_CurrencyKey] ON [cso].[FactStrategyPlan]([CurrencyKey]);\nCREATE STATISTICS [stat_cso_FactStrategyPlan_Datekey] ON [cso].[FactStrategyPlan]([Datekey]);\nCREATE STATISTICS [stat_cso_FactStrategyPlan_EntityKey] ON [cso].[FactStrategyPlan]([EntityKey]);\nCREATE STATISTICS [stat_cso_FactStrategyPlan_ProductCategoryKey] ON [cso].[FactStrategyPlan]([ProductCategoryKey]);\nCREATE STATISTICS [stat_cso_FactStrategyPlan_ScenarioKey] ON [cso].[FactStrategyPlan]([ScenarioKey]);\nCREATE STATISTICS [stat_cso_FactStrategyPlan_StrategyPlanKey] ON [cso].[FactStrategyPlan]([StrategyPlanKey]);\nCREATE STATISTICS [stat_cso_FactSalesQuota_ChannelKey] ON [cso].[FactSalesQuota]([ChannelKey]);\nCREATE STATISTICS [stat_cso_FactSalesQuota_CurrencyKey] ON [cso].[FactSalesQuota]([CurrencyKey]);\nCREATE STATISTICS [stat_cso_FactSalesQuota_DateKey] ON [cso].[FactSalesQuota]([DateKey]);\nCREATE STATISTICS [stat_cso_FactSalesQuota_ProductKey] ON [cso].[FactSalesQuota]([ProductKey]);\nCREATE STATISTICS [stat_cso_FactSalesQuota_SalesQuotaKey] ON [cso].[FactSalesQuota]([SalesQuotaKey]);\nCREATE STATISTICS [stat_cso_FactSalesQuota_ScenarioKey] ON [cso].[FactSalesQuota]([ScenarioKey]);\nCREATE STATISTICS [stat_cso_FactSalesQuota_StoreKey] ON [cso].[FactSalesQuota]([StoreKey]);\nCREATE STATISTICS [stat_cso_FactSales_channelKey] ON [cso].[FactSales]([channelKey]);\nCREATE STATISTICS [stat_cso_FactSales_CurrencyKey] ON [cso].[FactSales]([CurrencyKey]);\nCREATE STATISTICS [stat_cso_FactSales_DateKey] ON [cso].[FactSales]([DateKey]);\nCREATE STATISTICS [stat_cso_FactSales_ProductKey] ON [cso].[FactSales]([ProductKey]);\nCREATE STATISTICS [stat_cso_FactSales_PromotionKey] ON [cso].[FactSales]([PromotionKey]);\nCREATE STATISTICS [stat_cso_FactSales_SalesKey] ON [cso].[FactSales]([SalesKey]);\nCREATE STATISTICS [stat_cso_FactSales_StoreKey] ON [cso].[FactSales]([StoreKey]);\nCREATE STATISTICS [stat_cso_FactOnlineSales_CurrencyKey] ON [cso].[FactOnlineSales]([CurrencyKey]);\nCREATE STATISTICS [stat_cso_FactOnlineSales_CustomerKey] ON [cso].[FactOnlineSales]([CustomerKey]);\nCREATE STATISTICS [stat_cso_FactOnlineSales_DateKey] ON [cso].[FactOnlineSales]([DateKey]);\nCREATE STATISTICS [stat_cso_FactOnlineSales_OnlineSalesKey] ON [cso].[FactOnlineSales]([OnlineSalesKey]);\nCREATE STATISTICS [stat_cso_FactOnlineSales_ProductKey] ON [cso].[FactOnlineSales]([ProductKey]);\nCREATE STATISTICS [stat_cso_FactOnlineSales_PromotionKey] ON [cso].[FactOnlineSales]([PromotionKey]);\nCREATE STATISTICS [stat_cso_FactOnlineSales_StoreKey] ON [cso].[FactOnlineSales]([StoreKey]);\nCREATE STATISTICS [stat_cso_DimCustomer_AddressLine1] ON [cso].[DimCustomer]([AddressLine1]);\nCREATE STATISTICS [stat_cso_DimCustomer_AddressLine2] ON [cso].[DimCustomer]([AddressLine2]);\nCREATE STATISTICS [stat_cso_DimCustomer_BirthDate] ON [cso].[DimCustomer]([BirthDate]);\nCREATE STATISTICS [stat_cso_DimCustomer_CompanyName] ON [cso].[DimCustomer]([CompanyName]);\nCREATE STATISTICS [stat_cso_DimCustomer_CustomerKey] ON [cso].[DimCustomer]([CustomerKey]);\nCREATE STATISTICS [stat_cso_DimCustomer_CustomerLabel] ON [cso].[DimCustomer]([CustomerLabel]);\nCREATE STATISTICS [stat_cso_DimCustomer_CustomerType] ON [cso].[DimCustomer]([CustomerType]);\nCREATE STATISTICS [stat_cso_DimCustomer_DateFirstPurchase] ON [cso].[DimCustomer]([DateFirstPurchase]);\nCREATE STATISTICS [stat_cso_DimCustomer_Education] ON [cso].[DimCustomer]([Education]);\nCREATE STATISTICS [stat_cso_DimCustomer_EmailAddress] ON [cso].[DimCustomer]([EmailAddress]);\nCREATE STATISTICS [stat_cso_DimCustomer_ETLLoadID] ON [cso].[DimCustomer]([ETLLoadID]);\nCREATE STATISTICS [stat_cso_DimCustomer_FirstName] ON [cso].[DimCustomer]([FirstName]);\nCREATE STATISTICS [stat_cso_DimCustomer_Gender] ON [cso].[DimCustomer]([Gender]);\nCREATE STATISTICS [stat_cso_DimCustomer_GeographyKey] ON [cso].[DimCustomer]([GeographyKey]);\nCREATE STATISTICS [stat_cso_DimCustomer_HouseOwnerFlag] ON [cso].[DimCustomer]([HouseOwnerFlag]);\nCREATE STATISTICS [stat_cso_DimCustomer_LastName] ON [cso].[DimCustomer]([LastName]);\nCREATE STATISTICS [stat_cso_DimCustomer_LoadDate] ON [cso].[DimCustomer]([LoadDate]);\nCREATE STATISTICS [stat_cso_DimCustomer_MaritalStatus] ON [cso].[DimCustomer]([MaritalStatus]);\nCREATE STATISTICS [stat_cso_DimCustomer_MiddleName] ON [cso].[DimCustomer]([MiddleName]);\nCREATE STATISTICS [stat_cso_DimCustomer_NameStyle] ON [cso].[DimCustomer]([NameStyle]);\nCREATE STATISTICS [stat_cso_DimCustomer_NumberCarsOwned] ON [cso].[DimCustomer]([NumberCarsOwned]);\nCREATE STATISTICS [stat_cso_DimCustomer_NumberChildrenAtHome] ON [cso].[DimCustomer]([NumberChildrenAtHome]);\nCREATE STATISTICS [stat_cso_DimCustomer_Occupation] ON [cso].[DimCustomer]([Occupation]);\nCREATE STATISTICS [stat_cso_DimCustomer_Phone] ON [cso].[DimCustomer]([Phone]);\nCREATE STATISTICS [stat_cso_DimCustomer_Suffix] ON [cso].[DimCustomer]([Suffix]);\nCREATE STATISTICS [stat_cso_DimCustomer_Title] ON [cso].[DimCustomer]([Title]);\nCREATE STATISTICS [stat_cso_DimCustomer_TotalChildren] ON [cso].[DimCustomer]([TotalChildren]);\nCREATE STATISTICS [stat_cso_DimCustomer_UpdateDate] ON [cso].[DimCustomer]([UpdateDate]);\nCREATE STATISTICS [stat_cso_DimCustomer_YearlyIncome] ON [cso].[DimCustomer]([YearlyIncome]);\nCREATE STATISTICS [stat_cso_DimEmployee_BaseRate] ON [cso].[DimEmployee]([BaseRate]);\nCREATE STATISTICS [stat_cso_DimEmployee_BirthDate] ON [cso].[DimEmployee]([BirthDate]);\nCREATE STATISTICS [stat_cso_DimEmployee_CurrentFlag] ON [cso].[DimEmployee]([CurrentFlag]);\nCREATE STATISTICS [stat_cso_DimEmployee_DepartmentName] ON [cso].[DimEmployee]([DepartmentName]);\nCREATE STATISTICS [stat_cso_DimEmployee_EmailAddress] ON [cso].[DimEmployee]([EmailAddress]);\nCREATE STATISTICS [stat_cso_DimEmployee_EmergencyContactName] ON [cso].[DimEmployee]([EmergencyContactName]);\nCREATE STATISTICS [stat_cso_DimEmployee_EmergencyContactPhone] ON [cso].[DimEmployee]([EmergencyContactPhone]);\nCREATE STATISTICS [stat_cso_DimEmployee_EmployeeKey] ON [cso].[DimEmployee]([EmployeeKey]);\nCREATE STATISTICS [stat_cso_DimEmployee_EndDate] ON [cso].[DimEmployee]([EndDate]);\nCREATE STATISTICS [stat_cso_DimEmployee_ETLLoadID] ON [cso].[DimEmployee]([ETLLoadID]);\nCREATE STATISTICS [stat_cso_DimEmployee_FirstName] ON [cso].[DimEmployee]([FirstName]);\nCREATE STATISTICS [stat_cso_DimEmployee_Gender] ON [cso].[DimEmployee]([Gender]);\nCREATE STATISTICS [stat_cso_DimEmployee_HireDate] ON [cso].[DimEmployee]([HireDate]);\nCREATE STATISTICS [stat_cso_DimEmployee_LastName] ON [cso].[DimEmployee]([LastName]);\nCREATE STATISTICS [stat_cso_DimEmployee_LoadDate] ON [cso].[DimEmployee]([LoadDate]);\nCREATE STATISTICS [stat_cso_DimEmployee_MaritalStatus] ON [cso].[DimEmployee]([MaritalStatus]);\nCREATE STATISTICS [stat_cso_DimEmployee_MiddleName] ON [cso].[DimEmployee]([MiddleName]);\nCREATE STATISTICS [stat_cso_DimEmployee_ParentEmployeeKey] ON [cso].[DimEmployee]([ParentEmployeeKey]);\nCREATE STATISTICS [stat_cso_DimEmployee_PayFrequency] ON [cso].[DimEmployee]([PayFrequency]);\nCREATE STATISTICS [stat_cso_DimEmployee_Phone] ON [cso].[DimEmployee]([Phone]);\nCREATE STATISTICS [stat_cso_DimEmployee_SalariedFlag] ON [cso].[DimEmployee]([SalariedFlag]);\nCREATE STATISTICS [stat_cso_DimEmployee_SalesPersonFlag] ON [cso].[DimEmployee]([SalesPersonFlag]);\nCREATE STATISTICS [stat_cso_DimEmployee_StartDate] ON [cso].[DimEmployee]([StartDate]);\nCREATE STATISTICS [stat_cso_DimEmployee_Status] ON [cso].[DimEmployee]([Status]);\nCREATE STATISTICS [stat_cso_DimEmployee_Title] ON [cso].[DimEmployee]([Title]);\nCREATE STATISTICS [stat_cso_DimEmployee_UpdateDate] ON [cso].[DimEmployee]([UpdateDate]);\nCREATE STATISTICS [stat_cso_DimEmployee_VacationHours] ON [cso].[DimEmployee]([VacationHours]);\nCREATE STATISTICS [stat_cso_DimEntity_EndDate] ON [cso].[DimEntity]([EndDate]);\nCREATE STATISTICS [stat_cso_DimEntity_EntityDescription] ON [cso].[DimEntity]([EntityDescription]);\nCREATE STATISTICS [stat_cso_DimEntity_EntityKey] ON [cso].[DimEntity]([EntityKey]);\nCREATE STATISTICS [stat_cso_DimEntity_EntityLabel] ON [cso].[DimEntity]([EntityLabel]);\nCREATE STATISTICS [stat_cso_DimEntity_EntityName] ON [cso].[DimEntity]([EntityName]);\nCREATE STATISTICS [stat_cso_DimEntity_EntityType] ON [cso].[DimEntity]([EntityType]);\nCREATE STATISTICS [stat_cso_DimEntity_ETLLoadID] ON [cso].[DimEntity]([ETLLoadID]);\nCREATE STATISTICS [stat_cso_DimEntity_LoadDate] ON [cso].[DimEntity]([LoadDate]);\nCREATE STATISTICS [stat_cso_DimEntity_ParentEntityKey] ON [cso].[DimEntity]([ParentEntityKey]);\nCREATE STATISTICS [stat_cso_DimEntity_ParentEntityLabel] ON [cso].[DimEntity]([ParentEntityLabel]);\nCREATE STATISTICS [stat_cso_DimEntity_StartDate] ON [cso].[DimEntity]([StartDate]);\nCREATE STATISTICS [stat_cso_DimEntity_Status] ON [cso].[DimEntity]([Status]);\nCREATE STATISTICS [stat_cso_DimEntity_UpdateDate] ON [cso].[DimEntity]([UpdateDate]);\nCREATE STATISTICS [stat_cso_DimProduct_AvailableForSaleDate] ON [cso].[DimProduct]([AvailableForSaleDate]);\nCREATE STATISTICS [stat_cso_DimProduct_BrandName] ON [cso].[DimProduct]([BrandName]);\nCREATE STATISTICS [stat_cso_DimProduct_ClassID] ON [cso].[DimProduct]([ClassID]);\nCREATE STATISTICS [stat_cso_DimProduct_ClassName] ON [cso].[DimProduct]([ClassName]);\nCREATE STATISTICS [stat_cso_DimProduct_ColorID] ON [cso].[DimProduct]([ColorID]);\nCREATE STATISTICS [stat_cso_DimProduct_ColorName] ON [cso].[DimProduct]([ColorName]);\nCREATE STATISTICS [stat_cso_DimProduct_ETLLoadID] ON [cso].[DimProduct]([ETLLoadID]);\nCREATE STATISTICS [stat_cso_DimProduct_ImageURL] ON [cso].[DimProduct]([ImageURL]);\nCREATE STATISTICS [stat_cso_DimProduct_LoadDate] ON [cso].[DimProduct]([LoadDate]);\nCREATE STATISTICS [stat_cso_DimProduct_Manufacturer] ON [cso].[DimProduct]([Manufacturer]);\nCREATE STATISTICS [stat_cso_DimProduct_ProductDescription] ON [cso].[DimProduct]([ProductDescription]);\nCREATE STATISTICS [stat_cso_DimProduct_ProductKey] ON [cso].[DimProduct]([ProductKey]);\nCREATE STATISTICS [stat_cso_DimProduct_ProductLabel] ON [cso].[DimProduct]([ProductLabel]);\nCREATE STATISTICS [stat_cso_DimProduct_ProductName] ON [cso].[DimProduct]([ProductName]);\nCREATE STATISTICS [stat_cso_DimProduct_ProductSubcategoryKey] ON [cso].[DimProduct]([ProductSubcategoryKey]);\nCREATE STATISTICS [stat_cso_DimProduct_ProductURL] ON [cso].[DimProduct]([ProductURL]);\nCREATE STATISTICS [stat_cso_DimProduct_Size] ON [cso].[DimProduct]([Size]);\nCREATE STATISTICS [stat_cso_DimProduct_SizeRange] ON [cso].[DimProduct]([SizeRange]);\nCREATE STATISTICS [stat_cso_DimProduct_SizeUnitMeasureID] ON [cso].[DimProduct]([SizeUnitMeasureID]);\nCREATE STATISTICS [stat_cso_DimProduct_Status] ON [cso].[DimProduct]([Status]);\nCREATE STATISTICS [stat_cso_DimProduct_StockTypeID] ON [cso].[DimProduct]([StockTypeID]);\nCREATE STATISTICS [stat_cso_DimProduct_StockTypeName] ON [cso].[DimProduct]([StockTypeName]);\nCREATE STATISTICS [stat_cso_DimProduct_StopSaleDate] ON [cso].[DimProduct]([StopSaleDate]);\nCREATE STATISTICS [stat_cso_DimProduct_StyleID] ON [cso].[DimProduct]([StyleID]);\nCREATE STATISTICS [stat_cso_DimProduct_StyleName] ON [cso].[DimProduct]([StyleName]);\nCREATE STATISTICS [stat_cso_DimProduct_UnitCost] ON [cso].[DimProduct]([UnitCost]);\nCREATE STATISTICS [stat_cso_DimProduct_UnitOfMeasureID] ON [cso].[DimProduct]([UnitOfMeasureID]);\nCREATE STATISTICS [stat_cso_DimProduct_UnitOfMeasureName] ON [cso].[DimProduct]([UnitOfMeasureName]);\nCREATE STATISTICS [stat_cso_DimProduct_UnitPrice] ON [cso].[DimProduct]([UnitPrice]);\nCREATE STATISTICS [stat_cso_DimProduct_UpdateDate] ON [cso].[DimProduct]([UpdateDate]);\nCREATE STATISTICS [stat_cso_DimProduct_Weight] ON [cso].[DimProduct]([Weight]);\nCREATE STATISTICS [stat_cso_DimProduct_WeightUnitMeasureID] ON [cso].[DimProduct]([WeightUnitMeasureID]);\nCREATE STATISTICS [stat_cso_DimAccount_AccountDescription] ON [cso].[DimAccount]([AccountDescription]);\nCREATE STATISTICS [stat_cso_DimAccount_AccountKey] ON [cso].[DimAccount]([AccountKey]);\nCREATE STATISTICS [stat_cso_DimAccount_AccountLabel] ON [cso].[DimAccount]([AccountLabel]);\nCREATE STATISTICS [stat_cso_DimAccount_AccountName] ON [cso].[DimAccount]([AccountName]);\nCREATE STATISTICS [stat_cso_DimAccount_AccountType] ON [cso].[DimAccount]([AccountType]);\nCREATE STATISTICS [stat_cso_DimAccount_CustomMemberOptions] ON [cso].[DimAccount]([CustomMemberOptions]);\nCREATE STATISTICS [stat_cso_DimAccount_CustomMembers] ON [cso].[DimAccount]([CustomMembers]);\nCREATE STATISTICS [stat_cso_DimAccount_ETLLoadID] ON [cso].[DimAccount]([ETLLoadID]);\nCREATE STATISTICS [stat_cso_DimAccount_LoadDate] ON [cso].[DimAccount]([LoadDate]);\nCREATE STATISTICS [stat_cso_DimAccount_Operator] ON [cso].[DimAccount]([Operator]);\nCREATE STATISTICS [stat_cso_DimAccount_ParentAccountKey] ON [cso].[DimAccount]([ParentAccountKey]);\nCREATE STATISTICS [stat_cso_DimAccount_UpdateDate] ON [cso].[DimAccount]([UpdateDate]);\nCREATE STATISTICS [stat_cso_DimAccount_ValueType] ON [cso].[DimAccount]([ValueType]);\nCREATE STATISTICS [stat_cso_DimChannel_ChannelDescription] ON [cso].[DimChannel]([ChannelDescription]);\nCREATE STATISTICS [stat_cso_DimChannel_ChannelKey] ON [cso].[DimChannel]([ChannelKey]);\nCREATE STATISTICS [stat_cso_DimChannel_ChannelLabel] ON [cso].[DimChannel]([ChannelLabel]);\nCREATE STATISTICS [stat_cso_DimChannel_ChannelName] ON [cso].[DimChannel]([ChannelName]);\nCREATE STATISTICS [stat_cso_DimChannel_ETLLoadID] ON [cso].[DimChannel]([ETLLoadID]);\nCREATE STATISTICS [stat_cso_DimChannel_LoadDate] ON [cso].[DimChannel]([LoadDate]);\nCREATE STATISTICS [stat_cso_DimChannel_UpdateDate] ON [cso].[DimChannel]([UpdateDate]);\nCREATE STATISTICS [stat_cso_DimCurrency_CurrencyDescription] ON [cso].[DimCurrency]([CurrencyDescription]);\nCREATE STATISTICS [stat_cso_DimCurrency_CurrencyKey] ON [cso].[DimCurrency]([CurrencyKey]);\nCREATE STATISTICS [stat_cso_DimCurrency_CurrencyLabel] ON [cso].[DimCurrency]([CurrencyLabel]);\nCREATE STATISTICS [stat_cso_DimCurrency_CurrencyName] ON [cso].[DimCurrency]([CurrencyName]);\nCREATE STATISTICS [stat_cso_DimCurrency_ETLLoadID] ON [cso].[DimCurrency]([ETLLoadID]);\nCREATE STATISTICS [stat_cso_DimCurrency_LoadDate] ON [cso].[DimCurrency]([LoadDate]);\nCREATE STATISTICS [stat_cso_DimCurrency_UpdateDate] ON [cso].[DimCurrency]([UpdateDate]);\nCREATE STATISTICS [stat_cso_DimDate_AsiaSeason] ON [cso].[DimDate]([AsiaSeason]);\nCREATE STATISTICS [stat_cso_DimDate_CalendarDayOfWeek] ON [cso].[DimDate]([CalendarDayOfWeek]);\nCREATE STATISTICS [stat_cso_DimDate_CalendarDayOfWeekLabel] ON [cso].[DimDate]([CalendarDayOfWeekLabel]);\nCREATE STATISTICS [stat_cso_DimDate_CalendarHalfYear] ON [cso].[DimDate]([CalendarHalfYear]);\nCREATE STATISTICS [stat_cso_DimDate_CalendarHalfYearLabel] ON [cso].[DimDate]([CalendarHalfYearLabel]);\nCREATE STATISTICS [stat_cso_DimDate_CalendarMonth] ON [cso].[DimDate]([CalendarMonth]);\nCREATE STATISTICS [stat_cso_DimDate_CalendarMonthLabel] ON [cso].[DimDate]([CalendarMonthLabel]);\nCREATE STATISTICS [stat_cso_DimDate_CalendarQuarter] ON [cso].[DimDate]([CalendarQuarter]);\nCREATE STATISTICS [stat_cso_DimDate_CalendarQuarterLabel] ON [cso].[DimDate]([CalendarQuarterLabel]);\nCREATE STATISTICS [stat_cso_DimDate_CalendarWeek] ON [cso].[DimDate]([CalendarWeek]);\nCREATE STATISTICS [stat_cso_DimDate_CalendarWeekLabel] ON [cso].[DimDate]([CalendarWeekLabel]);\nCREATE STATISTICS [stat_cso_DimDate_CalendarYear] ON [cso].[DimDate]([CalendarYear]);\nCREATE STATISTICS [stat_cso_DimDate_CalendarYearLabel] ON [cso].[DimDate]([CalendarYearLabel]);\nCREATE STATISTICS [stat_cso_DimDate_DateDescription] ON [cso].[DimDate]([DateDescription]);\nCREATE STATISTICS [stat_cso_DimDate_Datekey] ON [cso].[DimDate]([Datekey]);\nCREATE STATISTICS [stat_cso_DimDate_EuropeSeason] ON [cso].[DimDate]([EuropeSeason]);\nCREATE STATISTICS [stat_cso_DimDate_FiscalHalfYear] ON [cso].[DimDate]([FiscalHalfYear]);\nCREATE STATISTICS [stat_cso_DimDate_FiscalHalfYearLabel] ON [cso].[DimDate]([FiscalHalfYearLabel]);\nCREATE STATISTICS [stat_cso_DimDate_FiscalMonth] ON [cso].[DimDate]([FiscalMonth]);\nCREATE STATISTICS [stat_cso_DimDate_FiscalMonthLabel] ON [cso].[DimDate]([FiscalMonthLabel]);\nCREATE STATISTICS [stat_cso_DimDate_FiscalQuarter] ON [cso].[DimDate]([FiscalQuarter]);\nCREATE STATISTICS [stat_cso_DimDate_FiscalQuarterLabel] ON [cso].[DimDate]([FiscalQuarterLabel]);\nCREATE STATISTICS [stat_cso_DimDate_FiscalYear] ON [cso].[DimDate]([FiscalYear]);\nCREATE STATISTICS [stat_cso_DimDate_FiscalYearLabel] ON [cso].[DimDate]([FiscalYearLabel]);\nCREATE STATISTICS [stat_cso_DimDate_FullDateLabel] ON [cso].[DimDate]([FullDateLabel]);\nCREATE STATISTICS [stat_cso_DimDate_HolidayName] ON [cso].[DimDate]([HolidayName]);\nCREATE STATISTICS [stat_cso_DimDate_IsHoliday] ON [cso].[DimDate]([IsHoliday]);\nCREATE STATISTICS [stat_cso_DimDate_IsWorkDay] ON [cso].[DimDate]([IsWorkDay]);\nCREATE STATISTICS [stat_cso_DimDate_NorthAmericaSeason] ON [cso].[DimDate]([NorthAmericaSeason]);\nCREATE STATISTICS [stat_cso_DimStore_AddressLine1] ON [cso].[DimStore]([AddressLine1]);\nCREATE STATISTICS [stat_cso_DimStore_AddressLine2] ON [cso].[DimStore]([AddressLine2]);\nCREATE STATISTICS [stat_cso_DimStore_CloseDate] ON [cso].[DimStore]([CloseDate]);\nCREATE STATISTICS [stat_cso_DimStore_CloseReason] ON [cso].[DimStore]([CloseReason]);\nCREATE STATISTICS [stat_cso_DimStore_EmployeeCount] ON [cso].[DimStore]([EmployeeCount]);\nCREATE STATISTICS [stat_cso_DimStore_EntityKey] ON [cso].[DimStore]([EntityKey]);\nCREATE STATISTICS [stat_cso_DimStore_ETLLoadID] ON [cso].[DimStore]([ETLLoadID]);\nCREATE STATISTICS [stat_cso_DimStore_GeographyKey] ON [cso].[DimStore]([GeographyKey]);\nCREATE STATISTICS [stat_cso_DimStore_GeoLocation] ON [cso].[DimStore]([GeoLocation]);\nCREATE STATISTICS [stat_cso_DimStore_Geometry] ON [cso].[DimStore]([Geometry]);\nCREATE STATISTICS [stat_cso_DimStore_LastRemodelDate] ON [cso].[DimStore]([LastRemodelDate]);\nCREATE STATISTICS [stat_cso_DimStore_LoadDate] ON [cso].[DimStore]([LoadDate]);\nCREATE STATISTICS [stat_cso_DimStore_OpenDate] ON [cso].[DimStore]([OpenDate]);\nCREATE STATISTICS [stat_cso_DimStore_SellingAreaSize] ON [cso].[DimStore]([SellingAreaSize]);\nCREATE STATISTICS [stat_cso_DimStore_Status] ON [cso].[DimStore]([Status]);\nCREATE STATISTICS [stat_cso_DimStore_StoreDescription] ON [cso].[DimStore]([StoreDescription]);\nCREATE STATISTICS [stat_cso_DimStore_StoreFax] ON [cso].[DimStore]([StoreFax]);\nCREATE STATISTICS [stat_cso_DimStore_StoreKey] ON [cso].[DimStore]([StoreKey]);\nCREATE STATISTICS [stat_cso_DimStore_StoreManager] ON [cso].[DimStore]([StoreManager]);\nCREATE STATISTICS [stat_cso_DimStore_StoreName] ON [cso].[DimStore]([StoreName]);\nCREATE STATISTICS [stat_cso_DimStore_StorePhone] ON [cso].[DimStore]([StorePhone]);\nCREATE STATISTICS [stat_cso_DimStore_StoreType] ON [cso].[DimStore]([StoreType]);\nCREATE STATISTICS [stat_cso_DimStore_UpdateDate] ON [cso].[DimStore]([UpdateDate]);\nCREATE STATISTICS [stat_cso_DimStore_ZipCode] ON [cso].[DimStore]([ZipCode]);\nCREATE STATISTICS [stat_cso_DimStore_ZipCodeExtension] ON [cso].[DimStore]([ZipCodeExtension]);\nCREATE STATISTICS [stat_cso_DimGeography_CityName] ON [cso].[DimGeography]([CityName]);\nCREATE STATISTICS [stat_cso_DimGeography_ContinentName] ON [cso].[DimGeography]([ContinentName]);\nCREATE STATISTICS [stat_cso_DimGeography_ETLLoadID] ON [cso].[DimGeography]([ETLLoadID]);\nCREATE STATISTICS [stat_cso_DimGeography_GeographyKey] ON [cso].[DimGeography]([GeographyKey]);\nCREATE STATISTICS [stat_cso_DimGeography_GeographyType] ON [cso].[DimGeography]([GeographyType]);\nCREATE STATISTICS [stat_cso_DimGeography_LoadDate] ON [cso].[DimGeography]([LoadDate]);\nCREATE STATISTICS [stat_cso_DimGeography_RegionCountryName] ON [cso].[DimGeography]([RegionCountryName]);\nCREATE STATISTICS [stat_cso_DimGeography_StateProvinceName] ON [cso].[DimGeography]([StateProvinceName]);\nCREATE STATISTICS [stat_cso_DimGeography_UpdateDate] ON [cso].[DimGeography]([UpdateDate]);\nCREATE STATISTICS [stat_cso_FactOnlineSales_CurrencyKey] ON [cso].[FactOnlineSales]([CurrencyKey]);\nCREATE STATISTICS [stat_cso_FactOnlineSales_CustomerKey] ON [cso].[FactOnlineSales]([CustomerKey]);\nCREATE STATISTICS [stat_cso_FactOnlineSales_DateKey] ON [cso].[FactOnlineSales]([DateKey]);\nCREATE STATISTICS [stat_cso_FactOnlineSales_OnlineSalesKey] ON [cso].[FactOnlineSales]([OnlineSalesKey]);\nCREATE STATISTICS [stat_cso_FactOnlineSales_ProductKey] ON [cso].[FactOnlineSales]([ProductKey]);\nCREATE STATISTICS [stat_cso_FactOnlineSales_PromotionKey] ON [cso].[FactOnlineSales]([PromotionKey]);\nCREATE STATISTICS [stat_cso_FactOnlineSales_StoreKey] ON [cso].[FactOnlineSales]([StoreKey]);\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "mysqlpool1",
						"poolName": "mysqlpool1"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://siaddemows2.dfs.core.windows.net/raw/Dimension/Customer/Dimension.Customer.parquet',\n        FORMAT = 'PARQUET'\n    ) AS [result]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_siaddemows2_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_siaddemows2_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://raw@siaddemows2.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE dbo.Dim_Cust (\n\t[CustomerKey] int,\n\t[WWICustomerID] int,\n\t[Customer] nvarchar(4000),\n\t[BillToCustomer] nvarchar(4000),\n\t[Category] nvarchar(4000),\n\t[BuyingGroup] nvarchar(4000),\n\t[PrimaryContact] nvarchar(4000),\n\t[PostalCode] nvarchar(4000),\n\t[ValidFrom] datetime2(7),\n\t[ValidTo] datetime2(7),\n\t[LineageKey] int\n\t)\n\tWITH (\n\tLOCATION = 'Dimension/Customer/Dimension.Customer.parquet',\n\tDATA_SOURCE = [raw_siaddemows2_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM dbo.Dim_Cust\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "demo2",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 3')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_siaddemows2_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_siaddemows2_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://raw@siaddemows2.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE dbo.Fact_Order (\n\t[OrderKey] bigint,\n\t[CityKey] int,\n\t[CustomerKey] int,\n\t[StockItemKey] int,\n\t[OrderDateKey] date,\n\t[PickedDateKey] date,\n\t[SalespersonKey] int,\n\t[PickerKey] int,\n\t[WWIOrderID] int,\n\t[WWIBackorderID] int,\n\t[Description] nvarchar(4000),\n\t[Package] nvarchar(4000),\n\t[Quantity] int,\n\t[UnitPrice] numeric(18,2),\n\t[TaxRate] numeric(18,3),\n\t[TotalExcludingTax] numeric(18,2),\n\t[TaxAmount] numeric(18,2),\n\t[TotalIncludingTax] numeric(18,2),\n\t[LineageKey] int\n\t)\n\tWITH (\n\tLOCATION = 'Fact/Order/Fact.Order.parquet',\n\tDATA_SOURCE = [raw_siaddemows2_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM dbo.Fact_Order\nGO\n\n\nSelect top 10\nBuyingGroup,\nCAST(SUM(TotalIncludingTax) as decimal(18,2)) as [(sum) TotalIncludingTax],\nCAST(AVG(TotalIncludingTax) as decimal(18,2)) as [(avg) TotalIncludingTax]\nfrom Dim_Cust C\nJoin Fact_Order O on O.CustomerKey = C.CustomerKey\nwhere BuyingGroup<>'N/A'\nGroup by Description, BuyingGroup\nORder by 3 Desc\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "demo2",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 4')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [AccountKey]\n,[ParentAccountKey]\n,[AccountLabel]\n,[AccountName]\n,[AccountDescription]\n,[AccountType]\n,[Operator]\n,[CustomMembers]\n,[ValueType]\n,[CustomMemberOptions]\n,[ETLLoadID]\n,[LoadDate]\n,[UpdateDate]\n FROM [cso].[DimAccount]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "mysqlpool1",
						"poolName": "mysqlpool1"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Track Loading')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Polybase script"
				},
				"content": {
					"query": "-- Track load Progress\n-- To see all requests\nSELECT * FROM sys.dm_pdw_exec_requests;\n\n-- To see a particular request identified by its label\nSELECT * FROM sys.dm_pdw_exec_requests as r\nWHERE \tr.label like 'CTAS%';\n\n\n-- To track bytes and files\nSELECT\n    r.command,\n    s.request_id,\n    r.status,\n    count(distinct input_name) as nbr_files,\n    sum(s.bytes_processed)/1024/1024/1024 as gb_processed\nFROM\n    sys.dm_pdw_exec_requests r\n    inner join sys.dm_pdw_dms_external_work s\n        on r.request_id = s.request_id\nWHERE\n\tr.label like 'CTAS%'\nGROUP BY\n    r.command,\n    s.request_id,\n    r.status\nORDER BY\n    nbr_files desc,\n    gb_processed desc;\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/mysqlpool1')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/mysparkpool1')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 10,
					"minNodeCount": 3
				},
				"nodeCount": 10,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.3",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks",
			"apiVersion": "2019-06-01-preview",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-custstgacct--siad-demo-ws2-siaddemows2')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/85715743-6996-454c-9b4b-9664cf411041/resourceGroups/siad-demo-rg/providers/Microsoft.Storage/storageAccounts/siaddemows2",
				"groupId": "dfs",
				"fqdns": [
					"siaddemows2.dfs.core.windows.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-sql--siad-demo-ws2')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/85715743-6996-454c-9b4b-9664cf411041/resourceGroups/siad-demo-rg/providers/Microsoft.Synapse/workspaces/siad-demo-ws2",
				"groupId": "sql",
				"fqdns": [
					"siad-demo-ws2.68e1e751-7405-4a8f-83bd-9864f336a1f8.sql.azuresynapse.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-sqlOnDemand--siad-demo-ws2')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/85715743-6996-454c-9b4b-9664cf411041/resourceGroups/siad-demo-rg/providers/Microsoft.Synapse/workspaces/siad-demo-ws2",
				"groupId": "sqlOnDemand",
				"fqdns": [
					"siad-demo-ws2-ondemand.68e1e751-7405-4a8f-83bd-9864f336a1f8.sql.azuresynapse.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}